lunarbot:
    # Publish all joint states _____________________
    lunarbot_joint_state_controller:
      type: joint_state_controller/JointStateController
      publish_rate: 50
      
    # Position Controller ________________________
    joint_5_position_controller:
        type: effot_controllers/JointPositionController
        joint: joint_5
        pid: {p: 100.0, i: 0.01, d: 10.0}

    # Velocity Controller ________________________
    auger_joint_velocity_controller:
        type: "velocity_controllers/JointVelocityController"
        joint: auger_joint

    # Diff_Drive Controller ______________________
    lunarbot_diff_drive_controller:
        type: "diff_drive_controller/DiffDriveController"
        publish_rate: 50

        left_wheel: ['joint_0', 'joint_2']
        right_wheel: ['joint_1', 'joint_3']

        wheel_separation: 0.61

# Odometry covariances for the encoder output of the robot. These values should
# be tuned to your robot's sample odometry data, but these values are a good place
# to start
        pose_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.03]
        twist_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.03]

# Top level frame (link) of the robot description
        base_frame_id: base_link

# Velocity and acceleration limits for the robot
        linear:
          x:
            has_velocity_limits    : true
            max_velocity           : 0.2   # m/s
            has_acceleration_limits: true
            max_acceleration       : 0.6   # m/s^2
        angular:
          z:
            has_velocity_limits    : true
            max_velocity           : 2.0   # rad/s
            has_acceleration_limits: true
            max_acceleration       : 6.0   # rad/s^2
